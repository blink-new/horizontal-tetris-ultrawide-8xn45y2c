@tailwind base;
@tailwind components;
@tailwind utilities;

@layer base {
  :root {
    --background: 210 100% 8%; /* #03102a */
    --foreground: 210 40% 98%;
    --card: 220 39% 11%;
    --card-foreground: 210 40% 98%;
    --popover: 220 39% 11%;
    --popover-foreground: 210 40% 98%;
    --primary: 30 96% 47%; /* #e98503 */
    --primary-foreground: 210 100% 8%;
    --secondary: 215 25% 27%;
    --secondary-foreground: 210 40% 98%;
    --muted: 215 25% 27%;
    --muted-foreground: 215 20% 65%;
    --accent: 40 94% 68%; /* #f8be66 */
    --accent-foreground: 210 100% 8%;
    --destructive: 0 84% 60%;
    --destructive-foreground: 210 40% 98%;
    --border: 215 25% 27%;
    --input: 215 25% 27%;
    --ring: 30 96% 47%;
    --chart-1: 30 96% 47%;
    --chart-2: 40 94% 68%;
    --chart-3: 217 91% 60%;
    --chart-4: 142 76% 36%;
    --chart-5: 0 84% 60%;
    --radius: 0.5rem;
    
    /* Tetris piece colors - bright saturated orange variations */
    --piece-i: 30 100% 65%; /* Bright saturated orange */
    --piece-o: 45 100% 70%; /* Golden yellow-orange */
    --piece-t: 25 100% 60%; /* Vivid orange */
    --piece-s: 35 100% 65%; /* Bright amber */
    --piece-z: 15 100% 55%; /* Red-orange */
    --piece-j: 40 100% 68%; /* Golden orange */
    --piece-l: 20 100% 50%; /* Deep bright orange */
  }
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply bg-background text-foreground;

    font-family: Poppins, sans-serif;
    font-feature-settings: "rlig" 1, "calt" 1;
    
    /* Global neon glow background */
    background: radial-gradient(ellipse at center, hsl(var(--primary) / 5%) 0%, hsl(var(--background)) 70%);
  }
}

/* Game-specific styles with neon glow effects */
.tetris-cell {
  @apply border border-slate-700/30 transition-all duration-150;

  background: hsl(var(--background) / 80%);
  box-shadow: inset 0 0 10px hsl(var(--primary) / 5%);
}

.tetris-cell.filled {
  @apply border-primary/50;

  box-shadow: 
    0 0 10px hsl(var(--primary) / 30%),
    inset 0 0 10px hsl(var(--primary) / 20%),
    0 0 20px hsl(var(--primary) / 15%);
}

.game-grid {
  display: grid;
  gap: 1px;
  background: hsl(var(--background) / 90%);
  border: 2px solid hsl(var(--primary) / 40%);
  border-radius: 8px;
  padding: 8px;
  width: 100%;
  max-width: none;
  height: auto;
  box-shadow: 
    0 0 30px hsl(var(--primary) / 20%),
    inset 0 0 30px hsl(var(--primary) / 5%),
    0 0 60px hsl(var(--primary) / 10%);
}

.piece-preview {
  display: grid;
  gap: 1px;
  background: hsl(var(--card) / 90%);
  border: 1px solid hsl(var(--primary) / 30%);
  border-radius: 6px;
  padding: 8px;
  box-shadow: 
    0 0 15px hsl(var(--primary) / 15%),
    inset 0 0 15px hsl(var(--primary) / 5%);
}

/* Neon glow for UI cards */
.neon-card {
  background: hsl(var(--card) / 90%);
  border: 1px solid hsl(var(--primary) / 30%);
  box-shadow: 
    0 0 20px hsl(var(--primary) / 15%),
    inset 0 0 20px hsl(var(--primary) / 5%),
    0 0 40px hsl(var(--primary) / 8%);
}

/* General neon glow utility */
.neon-glow {
  background: hsl(var(--card) / 50%);
  border: 1px solid hsl(var(--primary) / 20%);
  box-shadow: 
    0 0 15px hsl(var(--primary) / 10%),
    inset 0 0 15px hsl(var(--primary) / 3%);
}

/* Neon glow for text elements */
.neon-text {
  text-shadow: 
    0 0 10px hsl(var(--primary) / 50%),
    0 0 20px hsl(var(--primary) / 30%),
    0 0 30px hsl(var(--primary) / 20%);
}

/* Neon glow for buttons */
.neon-button {
  border: 1px solid hsl(var(--primary) / 40%);
  box-shadow: 
    0 0 15px hsl(var(--primary) / 20%),
    inset 0 0 15px hsl(var(--primary) / 5%);
  transition: all 0.3s ease;
}

.neon-button:hover {
  box-shadow: 
    0 0 25px hsl(var(--primary) / 40%),
    inset 0 0 25px hsl(var(--primary) / 10%),
    0 0 50px hsl(var(--primary) / 20%);
  border-color: hsl(var(--primary) / 60%);
}

@keyframes line-clear {
  0% { 
    opacity: 100%; 
    transform: scaleX(1); 
  }

  50% { 
    opacity: 50%; 
    transform: scaleX(1.1); 
  }

  100% { 
    opacity: 0%; 
    transform: scaleX(0); 
  }
}

.line-clearing {
  animation: line-clear 0.5s ease-in-out;
}

@keyframes piece-land {
  0% { 
    transform: scale(1); 
  }

  50% { 
    transform: scale(1.05); 
  }

  100% { 
    transform: scale(1); 
  }
}

.piece-landed {
  animation: piece-land 0.2s ease-out;
}